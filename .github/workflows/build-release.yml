name: Create Release from Version Tags

on:
  push:
    tags: ["v*"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    name: Build Release

    steps:
      # https://github.com/marketplace/actions/checkout
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set up REPO and TAG environment vars
        run: |
          echo "REPO=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
          echo "TAG=${GITHUB_SHA:0:6}" >> $GITHUB_ENV
          echo "NAME=$(jq -r '.name' package.json)" >> $GITHUB_ENV

      - name: This run was triggered by a version tag, reset the $TAG variable to the tag name
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "TAG=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install PHP dependencies
        run: composer install --prefer-dist --no-progress --no-suggest --no-dev


      - name: npm install
        run: |
          npm ci
          pwd
          echo "$(pwd)/node_modules/.bin" >> $GITHUB_PATH

      - name: try running again
        run: |
          iop-build-zip-archive
      # next, try setting path BEFORE npm ci, then running ci & build in one step
        
    
      # node node_modules/.bin/iop-build-zip-archive
          
        
      # - name: Create Zip archive with `composer archive`
      #   run: |
      #     composer archive -f zip --dir=../ --file=${REPO}

      # https://github.com/marketplace/actions/upload-a-build-artifact
      - name: Store Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.NAME }}.zip
          path: _builds/*.zip
          retention-days: 3

      - name: Create GitHub release
        if: ${{ contains(github.ref, 'refs/tags/') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${TAG} ../_builds
